// ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//
// テクスチャー管理処理 [texture_manager.h]
// Author : KOKI NISHIYAMA
//
// ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#ifndef _TEXTURE_MANAGER_H_
#define _TEXTURE_MANAGER_H_

#define _CRT_SECURE_NO_WARNINGS

// ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
// インクルードファイル
// ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#include "manager.h"

// ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
// 前方宣言
// ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

// ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
// 構造体
// ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

// ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
// クラス
// ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
class CTexture_manager
{
public:
	/* 列挙型 */
	// テクスチャータイプ
	typedef enum
	{
		TYPE_TESTFLOOR = 0,			// テスト用の床
		TYPE_RESULT_LOG,			// リザルトのロゴ
		TYPE_ANIBUTTON_LOG,			// AniButtonロゴ
		TYPE_BG,					// ゲームの背景
		TYPE_NONE,					// 背景なし
		TYPE_TUTORIAL_UI_FRAME,		// チュートリアルUI_枠
		TYPE_MAGMA,					// ダメージ床用マグマ
		TYPE_PLAYER_UI_01,			// プレイヤーUI_01
		TYPE_PLAYER_UI_02,			// プレイヤーUI_02
		TYPE_PLAYER_UI_03,			// プレイヤーUI_03
		TYPE_PLAYER_UI_04,			// プレイヤーUI_04
		TYPE_UI_NUMBER,				// ナンバー
		TYPE_RESULT_UI_FRAME_1P,	// リザルトUI_1Pの枠
		TYPE_RESULT_UI_FRAME_2P,	// リザルトUI_2Pの枠
		TYPE_RESULT_UI_FRAME_3P,	// リザルトUI_3Pの枠
		TYPE_RESULT_UI_FRAME_4P,	// リザルトUI_4Pの枠
		TYPE_RESULT_UI_RANK_01,		// リザルトUI_順位_01
		TYPE_RESULT_UI_RANK_02,		// リザルトUI_順位_02
		TYPE_RESULT_UI_RANK_03,		// リザルトUI_順位_03
		TYPE_RESULT_UI_RANK_04,		// リザルトUI_順位_04
		TYPE_RESULT_UI_DEATH_01,	// リザルトUI_死因_01
		TYPE_RESULT_UI_DEATH_02,	// リザルトUI_死因_02
		TYPE_RESULT_UI_DEATH_03,	// リザルトUI_死因_03
		TYPE_GAME_UI_NAME_TAG_01,	// ゲームUI_ネームタグ_01
		TYPE_GAME_UI_NAME_TAG_02,	// ゲームUI_ネームタグ_02
		TYPE_GAME_UI_NAME_TAG_03,	// ゲームUI_ネームタグ_03
		TYPE_GAME_UI_NAME_TAG_04,	// ゲームUI_ネームタグ_04
		TYPE_GAME_UI_GRAY_SQUARE,	// ゲームUI_灰色の四角
		TYPE_GAME_UI_START,			// ゲームUI_START
		TYPE_GAME_UI_FINISH,		// ゲームUI_FINISH
		TYPE_TUTORIAL_UI_OK,		// チュートリアルUI_OKサイン
		TYPE_EFFECT_SMOKE00,		// 噴火
		TYPE_EFFECT_SMOKE01,		// 煙
		TYPE_EFFECT_SPARK,			// 火花
		TYPE_EFFECT_BLOCK,			// ブロック
		TYPE_EFFECT_FIRE,			// 火
		TYPE_EFFECT_EXPLOSION,		// 爆発
		TYPE_BG_TITLE,				// タイトル背景
		TYPE_BG_AIR_SLASH,			// 空気の線
		TYPE_EFFECT_THUNDER,		// 雷のエフェクト
		TYPE_MAX					// 最大数
	} TYPE;

	/* 関数 */
	// コンストラクタ
	CTexture_manager();
	// デストラクタ
	~CTexture_manager();
	// 開放
	static void UnLoad(void);
	// 情報取得
	// テクスチャーの読み込み
	static HRESULT Load(void);
	// テクスチャー取得
	static LPDIRECT3DTEXTURE9 GetTexture(int const & nTextureId);
protected:
private:
	static std::vector<LPDIRECT3DTEXTURE9> m_st_vpTexture;
};

#endif
