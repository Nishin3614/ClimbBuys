// ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//
// モデル処理 [model.h]
// Author : KOKI NISHIYAMA
//
// ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#ifndef _MODEL_H_
#define _MODEL_H_

#define _CRT_SECURE_NO_WARNINGS

// ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
// インクルードファイル
// ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#include "scene_X.h"

// ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//
// クラス
//
// ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
class CModel : public CScene_X
{
public:
	/* 関数 */
	CModel();
	~CModel();
	void Init(void);
	void Uninit(void);
	void Update(void);
	void Draw(void);
	// 当たった後の処理
	//	nObjType	: オブジェクトタイプ
	//	pScene		: 相手のシーン情報
	virtual void Scene_MyCollision(
		int const &nObjType = 0,	// オブジェクトタイプ
		CScene * pScene = NULL		// 相手のシーン情報
	) {};
	// 相手に当てられた後の処理
	//	nObjType	: オブジェクトタイプ
	//	pScene		: 相手のシーン情報
	virtual void Scene_OpponentCollision(
		int const &nObjType = 0,	// オブジェクトタイプ
		CScene * pScene = NULL		// 相手のシーン情報
	) {};
	// 作成
	static CModel * Create(void);
	// モデルの情報渡し処理
	void BindModel(
		MODEL_OFFSET const &offset			// モデルのオフセット
	);
	// 初期モーションに
	void BeginMotion(
		KEY const &key,
		int const nMaxFrame
	);
	// 設定
	void SetMotion(								// モーション
		KEY const &key,
		int const nMaxFrame
	);

	// 透明度設定
	void SetAlpha(float fAlpha) { m_fAlpha = fAlpha; }

protected:
private:
	D3DXVECTOR3	m_posDest;			// 目的位置
	D3DXVECTOR3	m_posDiff;			// 差位置
	D3DXVECTOR3	m_rotDest;			// 目的回転
	D3DXVECTOR3	m_rotDiff;			// 差回転
	int			m_nFrame;			// フレーム
	int			m_nParent;			// 親番号
	float		m_fAlpha;			// 透明度
};
#endif