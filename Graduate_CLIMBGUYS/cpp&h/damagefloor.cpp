// ----------------------------------------------------------------------------------------------------------------------------------------------------------------
//
// ダメージ床[damagefloor.cpp]
// Author : FujiwaraMasato
//
// ----------------------------------------------------------------------------------------------------------------------------------------------------------------

// ----------------------------------------------------------------------------------------------------------------------------------------------------------------
//
// インクルードファイル
//
// ----------------------------------------------------------------------------------------------------------------------------------------------------------------
#include "damagefloor.h"
#include "player.h"
#include "basemode.h"
#include "debugproc.h"

#include "sound.h"

// ----------------------------------------------------------------------------------------------------------------------------------------------------------------
//
// マクロ定義
//
// ----------------------------------------------------------------------------------------------------------------------------------------------------------------

// ----------------------------------------------------------------------------------------------------------------------------------------------------------------
//
// 静的変数宣言
//
// ----------------------------------------------------------------------------------------------------------------------------------------------------------------

// ----------------------------------------------------------------------------------------------------------------------------------------------------------------
// イニシャライザコンストラクタ
// ----------------------------------------------------------------------------------------------------------------------------------------------------------------
CDamageFloor::CDamageFloor() : CScene_THREE::CScene_THREE()
{
	m_MoveSpeed = 0.0f;									// 移動量の初期化
	m_AscendUpToTime = 0;
}

// ----------------------------------------------------------------------------------------------------------------------------------------------------------------
// デストラクタ処理
// ----------------------------------------------------------------------------------------------------------------------------------------------------------------
CDamageFloor::~CDamageFloor()
{
}

// ----------------------------------------------------------------------------------------------------------------------------------------------------------------
// 初期化処理
// ----------------------------------------------------------------------------------------------------------------------------------------------------------------
void CDamageFloor::Init(void)
{
	// オフセットタイプ設定
	CScene_THREE::SetOffsetType(OFFSET_TYPE_SIDE_CENTER);

	// 透明にさせる
	CScene_THREE::SetCol(D3DXCOLOR(1.0f, 0.0f, 0.0f, 0.0f));

	m_MoveSpeed = 0.5f;
	m_AscendUpToTime = DERAY_TIME(180);

	// デバッグ時のみ赤く表示
	CScene_THREE::SetCol(D3DXCOLOR(1.0f, 1.0f, 1.0f, 1.0f));

	// シーン3Dの初期化
	CScene_THREE::Init();

	//通常アイテムの総数分
	for (int nCnt = 0; nCnt < CScene::GetMaxLayer(CScene::LAYER_CHARACTER); nCnt++)
	{
		CScene *pScene = CScene::GetScene(LAYER_CHARACTER, nCnt);
		// オブジェクトタイプがプレイヤーなら
		if (pScene->GetObj() == OBJ::OBJ_PLAYER)
		{
			CPlayer *pPlayer = (CPlayer*)pScene;
			// プレイヤータグがプレイヤー1なら
			if (pPlayer->GetPlayerTag() == PLAYER_TAG::PLAYER_1)
			{
				// プレイヤーのポインタ取得
				m_pPlayer[(int)PLAYER_TAG::PLAYER_1] = pPlayer;
			}
			// プレイヤータグがプレイヤー2なら
			else if (pPlayer->GetPlayerTag() == PLAYER_TAG::PLAYER_2)
			{
				// プレイヤーのポインタ取得
				m_pPlayer[(int)PLAYER_TAG::PLAYER_2] = pPlayer;
			}// プレイヤータグがプレイヤ31なら
			else if (pPlayer->GetPlayerTag() == PLAYER_TAG::PLAYER_3)
			{
				// プレイヤーのポインタ取得
				m_pPlayer[(int)PLAYER_TAG::PLAYER_3] = pPlayer;
			}// プレイヤータグがプレイヤー4なら
			else if (pPlayer->GetPlayerTag() == PLAYER_TAG::PLAYER_4)
			{
				// プレイヤーのポインタ取得
				m_pPlayer[(int)PLAYER_TAG::PLAYER_4] = pPlayer;
			}

			pPlayer = nullptr;
		}
	}
}

// ----------------------------------------------------------------------------------------------------------------------------------------------------------------
// 終了処理
// ----------------------------------------------------------------------------------------------------------------------------------------------------------------
void CDamageFloor::Uninit(void)
{
	CScene_THREE::Uninit();
}

// ----------------------------------------------------------------------------------------------------------------------------------------------------------------
// 更新処理
// ----------------------------------------------------------------------------------------------------------------------------------------------------------------
void CDamageFloor::Update(void)
{
	// ゲームモードだったら
	if (CManager::GetMode() == CManager::MODE_GAME)
	{
		// タイマーの値を減らしていき0になったら床を上昇させる
		if (m_AscendUpToTime-- <= 0)
		{
			m_AscendUpToTime = 0;
			// ダメージ床の上昇
			Move();
		}
		CDebugproc::Print("タイマー %d\n", m_AscendUpToTime);
	}

	// 高さを比較
	ComparisonHeight();

	CScene_THREE::Update();
}

// ----------------------------------------------------------------------------------------------------------------------------------------------------------------
// 描画処理
// ----------------------------------------------------------------------------------------------------------------------------------------------------------------
void CDamageFloor::Draw(void)
{
	// 描画
	CScene_THREE::Draw();
}

// ----------------------------------------------------------------------------------------------------------------------------------------------------------------
// 作成処理
// ----------------------------------------------------------------------------------------------------------------------------------------------------------------
CDamageFloor * CDamageFloor::Create()
{
	// 変数宣言
	CDamageFloor * pDamageFloor;		// シーン3Dクラス
										// メモリの生成(初め->基本クラス,後->派生クラス)
	pDamageFloor = new CDamageFloor();
	// シーン管理設定
	pDamageFloor->ManageSetting(CScene::LAYER_FLOOR);
	// 位置設定
	pDamageFloor->SetPos(D3DXVECTOR3(0.0, -500.0f, 0.0f));
	// サイズ設定
	pDamageFloor->SetSize(FIELD_SIZE);
	// 初期化処理
	pDamageFloor->Init();
	// テクスチャの貼り付け
	pDamageFloor->SetTexType(CTexture_manager::TYPE_MAGMA);

	// 生成したオブジェクトを返す
	return pDamageFloor;
}

// ----------------------------------------------------------------------------------------------------------------------------------------------------------------
// 読み込み処理
// ----------------------------------------------------------------------------------------------------------------------------------------------------------------
HRESULT CDamageFloor::Load(void)
{
	return S_OK;
}

// ----------------------------------------------------------------------------------------------------------------------------------------------------------------
// unload処理
// ----------------------------------------------------------------------------------------------------------------------------------------------------------------
void CDamageFloor::UnLoad(void)
{
}

// ----------------------------------------------------------------------------------------------------------------------------------------------------------------
// 高さを比較
// ----------------------------------------------------------------------------------------------------------------------------------------------------------------
void CDamageFloor::ComparisonHeight()
{
	// プレイヤーの数分
	for (int nCnt = 0; nCnt < 4; nCnt++)
	{
		if (m_pPlayer[nCnt])
		{
			// 高さを比較してプレイヤーが床より下に落ちたら死亡フラグをtrue
			if (this->GetPos().y >= m_pPlayer[nCnt]->GetPos().y)
			{
				if (!m_pPlayer[nCnt]->GetDie())
				{
					if (CPlayer::GetDieCount() < 3)
					{
						// 記録更新_死亡原因
						m_pPlayer[nCnt]->GetRecord().DieCause = CPlayer::DIECAUSE::DIECAUSE_FALL;
						// 死亡設定
						CManager::GetSound()->PlaySound(CSound::LABEL_SE_DIE0);
						m_pPlayer[nCnt]->Die();
					}
				}
			}
		}
	}
}

// ----------------------------------------------------------------------------------------------------------------------------------------------------------------
// 床の移動
// ----------------------------------------------------------------------------------------------------------------------------------------------------------------
void CDamageFloor::Move()
{
	this->GetPos().y += m_MoveSpeed;
}
