// =====================================================================================================================================================================
//
// マルチナンバーの処理 [multinumber.h]
// Author : Sato Yoshiki
//
// =====================================================================================================================================================================
#ifndef _MULTINUMBER_H_
#define _MULTINUMBER_H_

// =====================================================================================================================================================================
// インクルードファイル
// =====================================================================================================================================================================
#include "main.h"

// =====================================================================================================================================================================
// 前方宣言
// =====================================================================================================================================================================
class CNumber;					// ナンバークラス

// =====================================================================================================================================================================
// マルチナンバークラス
// =====================================================================================================================================================================
class CMultiNumber
{
public:

	CMultiNumber();											// コンストラクタ
	~CMultiNumber();										// デストラクタ

	/* メンバ関数 */
	void				Init();								// 初期化
	void				Uninit();							// 終了
	void				Update();							// 更新
	void				Draw();								// 描画

	/* 静的メンバ関数 */
	static CMultiNumber*Create(D3DXVECTOR3 pos, D3DXVECTOR2 size, int nValue, int nDigit, float fSpace);		// マルチナンバーの生成

	/* メンバ関数 */
	void		SetScore(int nScore);						// スコアの設定
	void		SetPos(D3DXVECTOR3 pos);					// 位置の設定
	void		SetSize(D3DXVECTOR2 size);					// サイズの設定

	D3DXVECTOR3 GetPos() { return m_pos; };						// 位置の取得
	D3DXVECTOR2 GetSize() { return m_size; };					// サイズの取得

private:
	/* 静的メンバ変数 */
	std::vector<CNumber*>		m_pNumbers;					// ナンバーのポインタ
	int							m_nMultiNumber;				// マルチナンバー
	D3DXVECTOR3					m_pos;						// 座標
	D3DXVECTOR2					m_size;						// 1つ当たりのサイズ

};
#endif
